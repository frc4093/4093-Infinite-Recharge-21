// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
// import frc.robot.Robot;
// import frc.robot.subsystems.*;
/**
 *
 */
public class BarrelRacing extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public BarrelRacing() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
          
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
        // addSequential(new GoToGroup(0,0));
        // addSequential(new GoToGroup(2,2));
        // addSequential(new GoToGroup(0,0));
        // addSequential(new GoToGroup(2,0));
        // addSequential(new GoToGroup(2,2));
        // addSequential(new GoToGroup(0, 2));
        // addSequential(new GoToGroup(0,0));
        //starts at 1.5,3
        // addSequential(new GoToGroup(6.5,3)); //1
        // addSequential(new GoToGroup(6.5,5.5)); //2
        // addSequential(new GoToGroup(3.5,5.5)); //3
        // addSequential(new GoToGroup(3.5, 3)); //4
        // addSequential(new GoToGroup(9.5,3)); //5
        // addSequential(new GoToGroup(9.5,.5)); //6
        // addSequential(new GoToGroup(5,.5)); //7
        // addSequential(new GoToGroup(10.5,6.5)); //8
        // addSequential(new GoToGroup(12,3.5)); //9
        // addSequential(new GoToGroup(10,3)); //10
        // addSequential(new GoToGroup(1, 3));
        // // addSequential(new GoToGroup(10, 3));
        addSequential(new SetStartPoint(1.5, 3)); //1
        addSequential(new GoToGroup(6, 3)); //2 5.5 ->6
        addSequential(new GoToGroup(6, 5)); //3 5.5 -> 6
        addSequential(new GoToGroup(3, 5)); //4
        addSequential(new GoToGroup(4, 3)); //5
        addSequential(new GoToGroup(9, 3)); //6
        addSequential(new GoToGroup(9, 1)); //7
        addSequential(new GoToGroup(6.5, 1)); //8
        addSequential(new GoToGroup(9, 6)); //9
        addSequential(new GoToGroup(11.5, 5)); //10
        addSequential(new GoToGroup(11, 3)); //11
        addSequential(new GoToGroup(1.2, 3.25)); //12

    } 
}
